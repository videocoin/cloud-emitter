syntax = "proto3";

package cloud.api.streams.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/videocoin/cloud-api/rpc/health.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service EmitterService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc RequestStream(StreamRequest) returns (Tx) {}
    rpc ApproveStream(StreamRequest) returns (Tx) {}
    rpc CreateStream(StreamRequest) returns (Tx) {}
    rpc EndStream(StreamRequest) returns (Tx) {}

    // rpc AddInputChunk(AddInputChunkRequest) returns (google.protobuf.Empty) {}
}

message Tx {
    bytes hash = 1;
}

message StreamRequest {
    string user_id = 1;
    uint64 stream_id = 2;
    string client_address = 3;
    repeated string profile_names = 4;
}
